[settings]
branch = "{{spaces.space_name}}-{{spaces.unique}}"

[assets.'workspace.Cargo.toml']
path = 'Cargo.toml'
contents = """
[workspace]
resolver = "2"
members = ["spaces"]

[profile.dev]
opt-level = 3
lto = false
debug = true
strip = false
codegen-units = 16

[profile.release]
opt-level = "z"
lto = true
debug = false
panic = "abort"
strip = true
codegen-units = 1
"""
type = "String"

[vscode.tasks.build_spaces]
type = "cargo"
command = "build"
args = ["--manifest-path=spaces/Cargo.toml"]
problemMatcher = ["$rustc"]
group = "build"
label = "build:spaces"

[vscode.tasks.install_dev_spaces]
type = "cargo"
command = "install"
args = ["--path=spaces", "--root=${userHome}/.local", "--profile=dev"]
problemMatcher = ["$rustc"]
group = "build"
label = "install_dev:spaces"

[vscode.tasks.install_spaces]
type = "cargo"
command = "install"
args = ["--path=spaces", "--root=${userHome}/.local", "--profile=release"]
problemMatcher = ["$rustc"]
group = "build"
label = "install:spaces"

[vscode.tasks.build_printer]
type = "cargo"
command = "build"
args = ["--manifest-path=printer/Cargo.toml"]
problemMatcher = ["$rustc"]
group = "build"
label = "build:printer"

[repositories]
spaces = { git = "https://github.com/work-spaces/spaces", branch = "main", checkout = "BranchHead" }
printer = { git = "https://github.com/work-spaces/printer-rs", branch = "main", checkout = "BranchHead" }
easy-archiver = { git = "https://github.com/work-spaces/easy-archiver", branch = "main", checkout = "BranchHead" }
'tools/sysroot-rust' = { git = "https://github.com/work-spaces/sysroot-rust", branch = "main", checkout = "BranchHead" }
'tools/sysroot-sccache' = { git = "https://github.com/work-spaces/sysroot-sccache", branch = "v0", checkout = "BranchHead" }

[env]
vars = { RUST_TOOLCHAIN = "1.80", PS1 = '"(spaces) $PS1"' }
paths = ["/usr/bin", "/bin"]

[cargo.patch]
'https://github.com/work-spaces/printer-rs' = { printer = { path = "./printer" } }
'https://github.com/work-spaces/easy-archiver' = { easy-archiver = { path = "./easy-archiver" } }

[cargo.build]
rustc-wrapper = "sccache"
